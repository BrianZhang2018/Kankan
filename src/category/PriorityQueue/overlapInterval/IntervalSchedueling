套路 for all overlap interval problems:

1. Sort by start-time, ascending order
2. Check overlap: compare the minimum end-time with current start-time, and update the minimum end-time when need

e.g. MeetingRoomII

        Interval source1 = new Interval(3, 4);
        Interval source = new Interval(1, 6);
        Interval source2 = new Interval(5, 7);

    1. Sort by start-time: (1, 6), (3, 4), (5, 7)

    2. overlap: (1, 6), (3, 4) -> must have separate room, but (3, 4), (5, 7) no overlap that they can use same room.

       Don't sort: 例如: (3, 4), (1, 6), (5, 7)，你就需要 3 个rooms了

    3. Queue里最后剩下overlap的interval


Template solution (find Non Overlap):
https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93735/A-Concise-Template-for-%22Overlapping-Interval-Problem%22



