key elements in sliding window solution:

1. int[]: bucket array to store the frequency of character (or Map, but int[] is better)

2. counter (HashSet): record the number of character and notify to slide the window 

3. two pointer: left, right. min Or maxLen variable.

4. add the character into the freq[] and increase or decrease the counter

5. slide the window. Remove the element from the start of window, and increase the start by add 1 every time

Good example:
LongestSubstringWithUniqueCharacterSlidingWindow.java

Pseudo code:
...
    Set counter = new HashSet;
    int[] freq = new int[128];
    int left, right = 0;

    while(right < inputS.length){

        char rc = s.charAt(right);
        counter.add(rc);
        freq[rc]++;
        right++;

        //sliding window
        while(counter condition...){
            1. update the freq, and left ++
            2. record the new length of substring
            3. recover the counter
        }
    }

    return substring;
...

Template solution reference:
https://leetcode.com/problems/minimum-window-substring/discuss/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems/25816
