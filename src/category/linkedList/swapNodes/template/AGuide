1. test weather we have more then k node left, if less then k node left we just return head

    int count = 0;
        while (curr != null && count != k) { // find the (k+1)th node which is the head of direct group (need to be reversed)
            curr = curr.next;
            count++;
        }
2. reverse k node at current level

    ListNode prev = reverseKGroup(curr, k); // reverse list with (k+1)th node as head
    // prev - head-pointer to reversed part
    // head - head-pointer to direct part (need to be reversed)
    // 解题思路: reverse current k-group (standard reverse linkedList way, but "prev" node is head of last reversed part)
    while (count-- > 0) {
        ListNode next = head.next;
        head.next = prev;
        // shift the pointer after reverse the link
        prev = head;
        head = next;
    }
    head = prev;